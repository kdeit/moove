{"version":3,"sources":["panels/Select.js","components/generator-component.js","panels/Generator.js","panels/Score.js","App.js","index.js"],"names":["generatorSpec","data","spec","Select","props","selectSpec","e","a","setData","val","find","i","id","currentTarget","dataset","goTo","level","map","item","expandable","data-id","key","onClick","title","Generator","iteration","count","useState","index","setIndex","useEffect","min","Math","ceil","max","floor","items","length","random","timer","window","setInterval","multipler","type","time","who","what","clearInterval","finish","className","osName","platform","generatorTime","generatorWho","generatorWhat","Home","isAllGenerate","setTimeout","left","go","data-to","IOS","Score","fetchedUser","before","photo_200","src","description","city","first_name","last_name","size","App","activePanel","setActivePanel","to","value","setUser","popout","setPopout","connect","sendPromise","user","subscribe","detail","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","send","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fff6f858.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport { Header, Group, List, Cell, HeaderButton } from '@vkontakte/vkui';\nimport data from '../json/data'\n\nconst generatorSpec = data.spec;\n\nconst Select = (props) => {\n\tconst selectSpec = async (e) => {\n\t\tprops.setData(val => {\n\t\t\tval.spec = generatorSpec.find(i => i.id == e.currentTarget.dataset.id);\n\t\t\treturn val;\n\t\t})\n\t\tprops.goTo('generator');\n\t}\n\n\n\treturn <Panel id={props.id}>\n\t\t<PanelHeader>\n\t\t\tLastScore\n\t\t</PanelHeader>\n\t\t<Group>\n\t\t\t<Header level=\"secondary\">Выберите специальность</Header>\n\t\t\t<List>\n\t\t\t\t{generatorSpec.map(item => (\n\t\t\t\t\t<Cell expandable data-id={item.id} key={item.id} onClick={selectSpec}>{item.title}</Cell>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t</Group>\n\t</Panel>\n};\n\nSelect.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgoTo: PropTypes.func.isRequired,\n\tdata: PropTypes.object,\n\tsetData: PropTypes.func\n\n};\n\nexport default Select;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Group, Div } from '@vkontakte/vkui';\n\nconst Generator = props => {\n\n    let iteration = 0;\n    var count = 0;\n    const [index, setIndex] = useState(0);\n    useEffect(() => {\n        let min = Math.ceil(0),\n            max = Math.floor(props.items.length + 1);\n        let random = Math.floor(Math.random() * (max - min)) + min;\n\n        const timer = window.setInterval(() => {\n\n            if (iteration === props.items.length * props.multipler + random) {\n                switch (props.type) {\n                    case 'time':\n                        props.setData(val => {\n                            val.time = props.items[count];\n                            return val;\n                        })\n                        break;\n                    case 'who':\n                        props.setData(val => {\n                            val.who = props.items[count];\n                            return val;\n                        })\n                        break;\n                    case 'what':\n                        props.setData(val => {\n                            val.what = props.items[count];\n                            return val;\n                        })\n                        break\n\n                }\n                window.clearInterval(timer);\n                props.finish();\n            } else {\n                iteration++;\n                if (count === props.items.length - 1) {\n                    count = 0;\n                } else {\n                    count++;\n                }\n                setIndex(count);\n\n            }\n\n        }, 100);\n        return () => {\n            window.clearInterval(timer);\n        };\n    }, [])\n\n    return <Group>\n        <Div className=\"gen\">\n            <div className=\"gen__item\">{props.items[index].title}</div>\n        </Div>\n    </Group>\n\n};\n\nGenerator.propTypes = {\n\n    items: PropTypes.array,\n    multipler: PropTypes.number.isRequired,\n    data: PropTypes.object,\n    setData: PropTypes.func,\n    finish: PropTypes.func,\n    type: PropTypes.string\n\n};\n\nexport default Generator;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport { Header, Group } from '@vkontakte/vkui';\nimport Generator from \"../components/generator-component\"\nimport data from '../json/data'\nimport '../scss/app.scss';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osName = platform();\nconst generatorTime = data.time;\nconst generatorWho = data.who;\nconst generatorWhat = data.what;\n\n\nconst Home = (props) => {\n\tconst finish = () => {\n\t\tlet isAllGenerate = true;\n\t\tfor (let i in props.data) {\n\t\t\tif (!props.data[i]) {\n\t\t\t\tisAllGenerate = false;\n\t\t\t}\n\t\t}\n\t\tif (isAllGenerate) {\n\t\t\twindow.setTimeout(() => { props.goTo(\"score\") }, 1000)\n\t\t}\n\t}\n\n\treturn <Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"select\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\t{props.id}\n\t\t</PanelHeader>\n\t\t<Group>\n\t\t\t<Header level=\"secondary\">Через</Header>\n\t\t\t<Generator items={generatorTime} finish={finish} type=\"time\" multipler={2} data={props.data} setData={props.setData}></Generator>\n\t\t\t<Header level=\"secondary\">Даже</Header>\n\t\t\t<Generator items={generatorWho} finish={finish} type=\"who\" multipler={3} data={props.data} setData={props.setData}></Generator>\n\t\t\t<Header level=\"secondary\">Сможет</Header>\n\t\t\t<Generator items={generatorWhat} finish={finish} type=\"what\" multipler={4} data={props.data} setData={props.setData}></Generator>\n\t\t</Group>\n\t</Panel>\n};\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tgoTo: PropTypes.func.isRequired,\n\tdata: PropTypes.object,\n\tsetData: PropTypes.func\n\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\n\nconst osName = platform();\nconst Score = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tLastScore\n\t\t</PanelHeader>\n\t\t<Group>\n\t\t\t{props.fetchedUser &&\n\n\t\t\t\t<Cell\n\t\t\t\t\tbefore={props.fetchedUser.photo_200 ? <Avatar src={props.fetchedUser.photo_200} /> : null}\n\t\t\t\t\tdescription={props.fetchedUser.city && props.fetchedUser.city.title ? props.fetchedUser.city.title : ''}\n\t\t\t\t>\n\t\t\t\t\t{`${props.fetchedUser.first_name} ${props.fetchedUser.last_name}`}\n\t\t\t\t</Cell>\n\t\t\t}\n\t\t\t<Div>Уже через <span>{props.data.time.title}</span> {props.data.who.title} будет {props.data.what.title} лучше тебя </Div>\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"1\">\n\t\t\t\t\tПрисоединяйся\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\n\t</Panel>\n);\n\nScore.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Score;\n","import React, { useState, useEffect } from 'react';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Select from './panels/Select';\nimport Generator from './panels/Generator';\nimport Score from './panels/Score';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport connect from '@vkontakte/vk-connect';\n\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('select');\n\n\tconst [data, setData] = useState({\n\t\t\"spec\": null,\n\t\t\"time\": null,\n\t\t\"who\": null,\n\t\t\"what\": null\n\t});\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\tconst goTo = (value) => {\n\t\tsetActivePanel(value);\n\t}\n\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data } }) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tsetPopout(null); //TODO: REMOVE ON PRODUCTION\n\t\tfetchData();\n\t}, []);\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Select id='select' goTo={goTo} data={data} setData={setData} />\n\t\t\t<Generator id='generator' go={go} goTo={goTo} data={data} setData={setData} />\n\t\t\t<Score id='score' fetchedUser={fetchedUser} go={go} data={data} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}