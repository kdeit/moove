{"version":3,"sources":["static/img/ico1.svg","static/img/ico2.svg","static/img/ico3.svg","panels/Select.js","components/generator-component.js","panels/Generator.js","panels/Score.js","App.js","index.js","static/img/logo.svg"],"names":["module","exports","generatorSpec","data","spec","Select","props","selectSpec","e","a","setData","val","find","i","id","parseInt","currentTarget","dataset","goTo","className","src","logo","alt","level","map","item","expandable","data-id","key","onClick","title","GeneratorComponent","useState","index","setIndex","useEffect","iteration","count","min","Math","ceil","max","floor","items","length","random","timer","window","setInterval","multipler","type","time","who","what","clearInterval","finish","generatorTime","generatorWho","generatorWhat","Generator","isAllGenerate","setTimeout","filteredWhat","filter","spec_id","ico1","ico2","ico3","Score","fetchedUser","before","photo_200","description","city","first_name","last_name","href","size","reset","share","App","activePanel","setActivePanel","go","to","value","setUser","popout","setPopout","connect","sendPromise","user","subscribe","detail","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","send","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0694ba97.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ico1.25b87295.svg\";","module.exports = __webpack_public_path__ + \"static/media/ico2.0ae34cf9.svg\";","module.exports = __webpack_public_path__ + \"static/media/ico3.9a89deea.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport { Header, Group, List, Cell, Div } from '@vkontakte/vkui';\nimport data from '../json/data'\nimport logo from \"../static/img/logo.svg\"\n\nconst generatorSpec = data.spec;\n\nconst Select = (props) => {\n\tconst selectSpec = async (e) => {\n\t\tprops.setData(val => {\n\t\t\tval.spec = generatorSpec.find(i => i.id === parseInt(e.currentTarget.dataset.id));\n\t\t\treturn val;\n\t\t})\n\t\tprops.goTo('generator');\n\t}\n\n\n\treturn <Panel id={props.id}>\n\t\t<PanelHeader>MOOVE career generator</PanelHeader>\n\t\t<Group>\n\t\t\t<Div className=\"logo-wrapper\">\n\t\t\t\t<img src={logo} alt=\"\" className=\"logo\" />\n\t\t\t</Div>\n\t\t</Group>\n\n\t\t<Group className=\"back-top\">\n\t\t\t<Header level=\"secondary\">\n\t\t\t\t<div className=\"treangle-red\"></div>\n\t\t\t\t<span>Выберите специальность</span>\n\t\t\t</Header>\n\t\t\t<List>\n\t\t\t\t{generatorSpec.map(item => (\n\t\t\t\t\t<Cell expandable data-id={item.id} key={item.id} onClick={selectSpec}>{item.title}</Cell>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t</Group>\n\t</Panel>\n};\n\nSelect.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgoTo: PropTypes.func.isRequired,\n\tdata: PropTypes.object,\n\tsetData: PropTypes.func\n};\n\nexport default Select;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Group, Div } from '@vkontakte/vkui';\n\nconst GeneratorComponent = (props) => {\n\n    const [index, setIndex] = useState(0);\n\n    useEffect(() => {\n        let iteration = 0;\n        var count = 0;\n        let min = Math.ceil(0),\n            max = Math.floor(props.items.length + 1);\n        let random = Math.floor(Math.random() * (max - min)) + min;\n\n        const timer = window.setInterval(() => {\n            if (iteration === props.items.length * props.multipler + random) {\n                switch (props.type) {\n                    case 'time':\n                        props.setData(val => {\n                            val.time = props.items[count];\n                            return val;\n                        })\n                        break;\n                    case 'who':\n                        props.setData(val => {\n                            val.who = props.items[count];\n                            return val;\n                        })\n                        break;\n                    case 'what':\n                        props.setData(val => {\n                            val.what = props.items[count];\n                            return val;\n                        })\n                        break;\n                    default:\n                        break;\n\n                }\n                window.clearInterval(timer);\n                props.finish();\n            } else {\n                iteration++;\n                if (count === props.items.length - 1) {\n                    count = 0;\n                } else {\n                    count++;\n                }\n                setIndex(count);\n\n            }\n\n        }, 100);\n        return () => {\n            window.clearInterval(timer);\n        };\n    }, [])\n\n    return <Group>\n        <Div className=\"gen\">\n            <div className=\"gen__item\">{props.items[index].title}</div>\n        </Div>\n    </Group>\n\n};\n\nGeneratorComponent.propTypes = {\n\n    items: PropTypes.array,\n    multipler: PropTypes.number.isRequired,\n    data: PropTypes.object,\n    setData: PropTypes.func,\n    finish: PropTypes.func,\n    type: PropTypes.string\n\n};\n\nexport default GeneratorComponent;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport { Header, Group, Div } from '@vkontakte/vkui';\nimport GeneratorComponent from \"../components/generator-component\"\nimport data from '../json/data'\nimport logo from \"../static/img/logo.svg\"\nimport ico1 from \"../static/img/ico1.svg\"\nimport ico2 from \"../static/img/ico2.svg\"\nimport ico3 from \"../static/img/ico3.svg\"\n\nconst generatorTime = data.time;\nconst generatorWho = data.who;\nconst generatorWhat = data.what;\n\n\nconst Generator = (props) => {\n\tconst finish = () => {\n\t\tlet isAllGenerate = true;\n\t\tfor (let i in props.data) {\n\t\t\tif (!props.data[i]) {\n\t\t\t\tisAllGenerate = false;\n\t\t\t}\n\t\t}\n\t\tif (isAllGenerate) {\n\t\t\twindow.setTimeout(() => { props.goTo(\"score\") }, 1000)\n\t\t}\n\t}\n\n\tlet filteredWhat = generatorWhat.filter(i => i.spec_id === props.data.spec.id);\n\n\tconst [what] = useState(filteredWhat);\n\n\treturn <Panel id={props.id}>\n\t\t<PanelHeader>MOOVE career generator</PanelHeader>\n\t\t<Group>\n\t\t\t<Div className=\"logo-wrapper\">\n\t\t\t\t<img src={logo} alt=\"\" className=\"logo\" />\n\t\t\t</Div>\n\t\t</Group>\n\t\t<Group className=\"generator-wrapper\">\n\n\t\t\t<Header level=\"secondary\">\n\t\t\t\t<img src={ico1} alt=\"\" className=\"Icon\" />\n\t\t\t\t<span>Через</span>\n\t\t\t</Header>\n\t\t\t<GeneratorComponent items={generatorTime} finish={finish} type=\"time\" multipler={2} data={props.data} setData={props.setData}></GeneratorComponent>\n\n\t\t\t<Header level=\"secondary\">\n\t\t\t\t<img src={ico2} alt=\"\" className=\"Icon\" />\n\t\t\t\t<span>Даже</span>\n\t\t\t</Header>\n\t\t\t<GeneratorComponent items={generatorWho} finish={finish} type=\"who\" multipler={3} data={props.data} setData={props.setData}></GeneratorComponent>\n\n\t\t\t<Header level=\"secondary\">\n\t\t\t\t<img src={ico3} alt=\"\" className=\"Icon\" />\n\t\t\t\t<span>Сможет</span>\n\t\t\t</Header>\n\t\t\t<GeneratorComponent items={what} finish={finish} type=\"what\" multipler={4} data={props.data} setData={props.setData}></GeneratorComponent>\n\t\t</Group>\n\t</Panel>\n};\n\nGenerator.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tgoTo: PropTypes.func.isRequired,\n\tdata: PropTypes.object,\n\tsetData: PropTypes.func\n\n};\n\nexport default Generator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport logo from \"../static/img/logo.svg\"\n\nconst Score = (props) => {\n\n\treturn <Panel id={props.id}>\n\t\t<PanelHeader>MOOVE career generator</PanelHeader>\n\t\t<Group>\n\t\t\t<Div className=\"logo-wrapper\">\n\t\t\t\t<img src={logo} alt=\"\" className=\"logo\" />\n\t\t\t</Div>\n\t\t</Group>\n\t\t<Group >\n\t\t\t{props.fetchedUser &&\n\n\t\t\t\t<Cell\n\t\t\t\t\tbefore={props.fetchedUser.photo_200 ? <Avatar src={props.fetchedUser.photo_200} /> : null}\n\t\t\t\t\tdescription={props.fetchedUser.city && props.fetchedUser.city.title ? props.fetchedUser.city.title : ''}\n\t\t\t\t>\n\t\t\t\t\t{`${props.fetchedUser.first_name} ${props.fetchedUser.last_name}`}\n\t\t\t\t</Cell>\n\t\t\t}\n\t\t\t{props.data.who &&\n\t\t\t\t<Div className=\"score\">\n\t\t\t\t\t<Div>Уже через <span>{props.data.time.title}</span> даже <span>{props.data.who.title}</span> будет <span>{props.data.what.title}</span> лучше тебя </Div>\n\t\t\t\t\t<Div>Запишись на программу MOOVE пока не поздно!</Div>\n\t\t\t\t\t<Div>\n\t\t\t\t\t\t<a href=\"https://common.skolkovo.ru/moove-by-skolkovo-mts/\" className=\"btn\">\n\t\t\t\t\t\t\t<Button size=\"xl\" level=\"1\">\n\t\t\t\t\t\t\t\tЗаписаться\n\t\t\t\t</Button>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</Div>\n\t\t\t\t</Div>}\n\n\t\t\t<Group className=\"button-block\">\n\t\t\t\t<Button level=\"secondary\" onClick={props.reset}>Попробовать еще раз</Button>\n\t\t\t\t<Button level=\"secondary\" onClick={props.share}>Поделиться результатом</Button>\n\t\t\t</Group>\n\t\t</Group>\n\n\t</Panel>\n};\n\nScore.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\treset: PropTypes.func.isRequired,\n\tshare: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Score;\n","import React, { useState, useEffect } from 'react';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Select from './panels/Select';\nimport Generator from './panels/Generator';\nimport Score from './panels/Score';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport connect from '@vkontakte/vk-connect';\n\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('select');\n\n\tconst [data, setData] = useState({\n\t\t\"spec\": null,\n\t\t\"time\": null,\n\t\t\"who\": null,\n\t\t\"what\": null\n\t});\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\tconst goTo = (value) => {\n\t\tsetActivePanel(value);\n\t}\n\n\tconst reset = () => {\n\t\tsetActivePanel('select');\n\t\tsetData({\n\t\t\t\"spec\": null,\n\t\t\t\"time\": null,\n\t\t\t\"who\": null,\n\t\t\t\"what\": null\n\t\t})\n\n\t}\n\n\tconst share = () => {\n\t\tconnect.send(\"VKWebAppShowWallPostBox\", { \"message\": \"Уже через \" + data.time.title + \" даже \" + data.who.title + \" сможет \" + data.what.title + \" лучше меня. Запишись на программу MOOVE пока не поздно! https://vk.com/app7210481\" });\n\t}\n\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data } }) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tsetPopout(null); //TODO: REMOVE ON PRODUCTION\n\t\tfetchData();\n\t}, []);\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Select id='select' goTo={goTo} data={data} setData={setData} />\n\t\t\t<Generator id='generator' go={go} goTo={goTo} data={data} setData={setData} />\n\t\t\t<Score id='score' share={share} reset={reset} fetchedUser={fetchedUser} go={go} data={data} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\nimport \"./static/fonts/PFCentroSansPro-Bold.css\"\nimport \"./static/fonts/PFCentroSansPro-Regular.css\"\nimport \"./scss/app.scss\"\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/logo.9454ac83.svg\";"],"sourceRoot":""}